/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pl.projekt5.views;

import java.util.ListIterator;
import pl.projekt5.models.ModelFactory;
import pl.projekt5.models.Nauczyciel;
import pl.projekt5.models.NauczycielModel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import pl.projekt5.models.Klasa;
import pl.projekt5.models.KlasaModel;
import pl.projekt5.models.Przedmiot;
import pl.projekt5.models.PrzedmiotModel;
import pl.projekt5.models.Uczen;
import pl.projekt5.models.UczenModel;

/**
 *
 * @author Jacek
 */
public class Opcje extends javax.swing.JFrame {

    /**
     * Creates new form Opcje
     */
    
    public Opcje() {
        initComponents();
        ModelFactory m = ModelFactory.getInstance();
        KlasaModel klasa1 = (KlasaModel)m.getModel("KlasaModel");
        ListIterator<Klasa> it = klasa1.getAll().listIterator();
        while(it.hasNext()){
            jComboBox3.addItem(it.next().nazwa);
        }
        if(!jCheckBox1.isSelected())
            jComboBox3.setVisible(false);
        else
            jComboBox3.setVisible(true);
        opcja.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tytul = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jComboBox3 = new javax.swing.JComboBox();
        haslo_label = new javax.swing.JLabel();
        haslo_pole = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        opcja = new javax.swing.JLabel();
        combo1 = new javax.swing.JComboBox();
        Zamknij = new javax.swing.JButton();
        combo2 = new javax.swing.JComboBox();
        label_combo1 = new javax.swing.JLabel();
        label_combo2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        tytul.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        tytul.setText("Dodaj/usun nauczyciela klase..");

        jLabel2.setText("jLabel2");

        jLabel3.setText("jLabel3");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton1.setText("Zatwierdz");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Wychowawca");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jakiej klasy?" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        haslo_label.setText("Haslo");

        jLabel1.setText("Przedmiot");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        Zamknij.setText("Zamknij");
        Zamknij.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZamknijActionPerformed(evt);
            }
        });

        label_combo1.setText("jLabel4");

        label_combo2.setText("jLabel5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(opcja)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tytul)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCheckBox1)
                                        .addComponent(jLabel3)
                                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextField1)
                                    .addGap(25, 25, 25)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label_combo1))
                                .addGap(25, 25, 25)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(label_combo2)
                            .addComponent(haslo_pole, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Zamknij))
                            .addComponent(jLabel1)
                            .addComponent(haslo_label)
                            .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(combo2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tytul))
                    .addComponent(opcja))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_combo1)
                    .addComponent(label_combo2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(haslo_label)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(haslo_pole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(Zamknij))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void ukryj_wszystko(){
        combo1.setVisible(false);
        combo2.setVisible(false);
        haslo_label.setVisible(false);
        haslo_pole.setVisible(false);
        jCheckBox1.setVisible(false);
        jComboBox3.setVisible(false);
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        jLabel3.setVisible(false);
        label_combo1.setVisible(false);
        label_combo2.setVisible(false);
        jTextField1.setVisible(false);
        jTextField2.setVisible(false);
        jTextField3.setVisible(false);
        opcja.setVisible(false);  
    }
    
    
    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        if(opcja.getText().equals("5")){           
            ModelFactory m = ModelFactory.getInstance();
            String nazwa = jComboBox3.getSelectedItem().toString();
        
            KlasaModel kl = (KlasaModel)m.getModel("KlasaModel");
            ListIterator<Klasa> it = kl.getAll().listIterator();
            int id = 0;
            while(it.hasNext()){
                Klasa kl2 = it.next();
                if(nazwa.equals(kl2.nazwa)){
                    id = kl2.id;
                }      
            }    
            UczenModel uczen1 = (UczenModel)m.getModel("UczenModel");
            ListIterator<Uczen> it2 = uczen1.getAll(id).listIterator();
            while(it2.hasNext()){
                Uczen uczen2 = it2.next();
                combo1.addItem(uczen2.nazwisko+" "+uczen2.imie);
            }        
        }
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(jCheckBox1.isSelected())
            jComboBox3.setVisible(true);
        else
            jComboBox3.setVisible(false);
        
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    void dodaj_nauczyciela(){
        ModelFactory m = ModelFactory.getInstance();
        NauczycielModel nauczyciele = (NauczycielModel)m.getModel("NauczycielModel");
        PrzedmiotModel przedmioty = (PrzedmiotModel)m.getModel("PrzedmiotModel");
        if(jTextField1.getText().equals("") || jTextField2.getText().equals("") || haslo_pole.getText().equals("")){   
            showMessageDialog(null, "Sprawdz poprawnosc wpisanych danych");  
        }
        else{
            String imie = jTextField1.getText();
            String nazwisko = jTextField2.getText();
            String haslo = haslo_pole.getText();
            Nauczyciel naucz = new Nauczyciel(1, imie, nazwisko);
            
            KlasaModel klasa1 = (KlasaModel)m.getModel("KlasaModel");
            ListIterator<Klasa> it = klasa1.getAll().listIterator();
            if(jCheckBox1.isSelected()){                
                int id2=0;
                while(it.hasNext()){
                    if(it.next().nazwa.equals(jComboBox3.getSelectedItem().toString())){
                        it.previous();
                        id2 = it.next().id;
                        //nauczyciele.update(nauczyciele.get(id2, true), 0);
                    }      
                }
                nauczyciele.add(naucz, haslo, id2);
            }
            else{
                nauczyciele.add(naucz, haslo);
            }
            ListIterator<Nauczyciel> int2 = nauczyciele.getAll().listIterator();
            int idd=0;
            while(int2.hasNext()){
                idd = int2.next().id;
            }
            if(!jTextField3.getText().equals("")) {
                Przedmiot przed = new Przedmiot(1, jTextField3.getText());            
                przedmioty.add(przed, idd);
            }
            showMessageDialog(null, "Dodano nauczyciela"); 
            view okno = new view();
            okno.setVisible(true);
            dispose();
        }      
    }
    
    void dodaj_klase(){
        ModelFactory m = ModelFactory.getInstance();
        KlasaModel klasy = (KlasaModel)m.getModel("KlasaModel");
        if(jTextField1.getText().equals("")){
            showMessageDialog(null, "Pole z nazwa klasy jest puste");
        }
        else{
            String nazwa = jTextField1.getText();
            boolean flaga=false;
            
            KlasaModel klasa1 = (KlasaModel)m.getModel("KlasaModel");
            ListIterator<Klasa> it = klasa1.getAll().listIterator();
            while(it.hasNext()){
                if(it.next().nazwa.equals(nazwa)){
                    flaga = true;
                }          
            }
            if(flaga){
                showMessageDialog(null, "W bazie zajduje sie juz klasa o takiej nazwie");                
            }
            else{
                Klasa kl = new Klasa(1, nazwa);
                klasy.add(kl);
                showMessageDialog(null, "Dodano klase");
                view okno = new view();
                okno.setVisible(true);
                dispose();
            }
        }
    }
    
    void dodaj_ucznia(){
        if(jTextField1.getText().equals("") || jTextField2.getText().equals("")){   
            showMessageDialog(null, "Sprawdz poprawnosc wpisanych danych");  
        }
        else{
            ModelFactory m = ModelFactory.getInstance();
            KlasaModel klasa1 = (KlasaModel)m.getModel("KlasaModel");
            ListIterator<Klasa> it = klasa1.getAll().listIterator();
            int id=0;
            while(it.hasNext()){
                if(it.next().nazwa.equals(jComboBox3.getSelectedItem().toString())){
                    it.previous();
                    id = it.next().id;
                }      
            }
            
            Uczen ucz = new Uczen(1, jTextField1.getText(), jTextField2.getText());
            UczenModel uczniowie = (UczenModel)m.getModel("UczenModel");
            uczniowie.add(ucz, id);
            showMessageDialog(null, "Dodano ucznia");
            view okno = new view();
            okno.setVisible(true);
            dispose();
            
        }
    }
    
    void usun_nauczyciela(){
        ModelFactory m = ModelFactory.getInstance();
        NauczycielModel naucz = (NauczycielModel)m.getModel("NauczycielModel");
        ListIterator<Nauczyciel> it = naucz.getAll().listIterator();
        Nauczyciel usun = new Nauczyciel(0, " ", " ");
        while(it.hasNext()){
            Nauczyciel naucz2 = it.next();
            String nazwa = naucz2.nazwisko+" "+naucz2.imie;
           if(nazwa.equals(combo1.getSelectedItem().toString())){
               usun = naucz2;
           }      
        }
        
        naucz.delete(usun);
        showMessageDialog(null, "Usunieto nauczyciela");  
        view okno = new view();
        okno.setVisible(true);
        dispose();
    }
    
    void usun_klase(){
        ModelFactory m = ModelFactory.getInstance();
        KlasaModel kl = (KlasaModel)m.getModel("KlasaModel");
        ListIterator<Klasa> it = kl.getAll().listIterator();
        Klasa usun = new Klasa(0, " ");
        while(it.hasNext()){
            Klasa kl2 = it.next();
           if(kl2.nazwa.equals(combo1.getSelectedItem().toString())){
               usun = kl2;
           }      
        }
        
        kl.delete(usun);
        showMessageDialog(null, "Usunieto klase");  
        view okno = new view();
        okno.setVisible(true);
        dispose();
    }
    
    void usun_ucznia(){
        ModelFactory m = ModelFactory.getInstance();
        UczenModel ucz1 = (UczenModel)m.getModel("UczenModel");
        ListIterator<Uczen> it = ucz1.getAll().listIterator();
        Uczen usun = new Uczen(0, " ", " ");
        while(it.hasNext()){
            Uczen ucz2 = it.next();
            String nazwa = ucz2.nazwisko+" "+ucz2.imie;
           if(nazwa.equals(combo1.getSelectedItem().toString())){
               usun = ucz2;
           }      
        }
        
        ucz1.delete(usun);
        showMessageDialog(null, "Usunieto ucznia");  
        view okno = new view();
        okno.setVisible(true);
        dispose();
    }
    
    void zmien_nauczyciela(){
        ModelFactory m = ModelFactory.getInstance();
        NauczycielModel naucz = (NauczycielModel)m.getModel("NauczycielModel");
        ListIterator<Nauczyciel> it = naucz.getAll().listIterator();
        int id_nauczyciela = 0;
        while(it.hasNext()){
            Nauczyciel naucz2 = it.next();
            String nazwa = naucz2.nazwisko+" "+naucz2.imie;
           if(nazwa.equals(combo2.getSelectedItem().toString())){
               id_nauczyciela = naucz2.id;
           }      
        }
        
        PrzedmiotModel przedmioty = (PrzedmiotModel)m.getModel("PrzedmiotModel");
        ListIterator<Przedmiot> it2 = przedmioty.getAll().listIterator();
        int id_przedmiotu = 0;
        while(it2.hasNext()){
            Przedmiot przedmiot_iter = it2.next();
            String nazwa = przedmiot_iter.nazwa;
            if(nazwa.equals(combo1.getSelectedItem().toString())){
               id_przedmiotu = przedmiot_iter.id;
           }      
        }       
        przedmioty.update(przedmioty.get(id_przedmiotu), id_nauczyciela);
        showMessageDialog(null, "Zmieniono nauczyciela");  
        view okno = new view();
        okno.setVisible(true);
        dispose();
    }
    
    void zmien_wychowawce(){
        ModelFactory m = ModelFactory.getInstance();
        NauczycielModel naucz = (NauczycielModel)m.getModel("NauczycielModel");
        ListIterator<Nauczyciel> it = naucz.getAll().listIterator();
        int id_nauczyciela = 0;
        while(it.hasNext()){
            Nauczyciel naucz2 = it.next();
            String nazwa = naucz2.nazwisko+" "+naucz2.imie;
           if(nazwa.equals(combo1.getSelectedItem().toString())){
               id_nauczyciela = naucz2.id;
               showMessageDialog(null, id_nauczyciela);  
           }      
        }
        KlasaModel klasy = (KlasaModel)m.getModel("KlasaModel");
        ListIterator<Klasa> it2 = klasy.getAll().listIterator();
        int id_klasy = 0;
        while(it2.hasNext()){
            Klasa klasa_iter = it2.next();
            String nazwa = klasa_iter.nazwa;
            if(nazwa.equals(jComboBox3.getSelectedItem().toString())){
               id_klasy = klasa_iter.id;
               showMessageDialog(null, id_klasy); 
               naucz.update(naucz.get(id_klasy, true), 0);
           }      
        }
        
        naucz.update(naucz.get(id_nauczyciela), id_klasy);
        showMessageDialog(null, "Zmieniono wychowawce");  
        view okno = new view();
        okno.setVisible(true);
        dispose();
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(opcja.getText().equals("0"))
            dodaj_nauczyciela();
        if(opcja.getText().equals("1"))
            dodaj_klase();
        if(opcja.getText().equals("2"))
            dodaj_ucznia();
        if(opcja.getText().equals("3"))
            usun_nauczyciela();
        if(opcja.getText().equals("4"))
            usun_klase();
        if(opcja.getText().equals("5"))
            usun_ucznia();
        if(opcja.getText().equals("6"))
            zmien_nauczyciela();
        if(opcja.getText().equals("7"))
            zmien_wychowawce();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void ZamknijActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZamknijActionPerformed
        view okno = new view();
        okno.setVisible(true);
        dispose();
    }//GEN-LAST:event_ZamknijActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Opcje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Opcje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Opcje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Opcje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Opcje().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Zamknij;
    public javax.swing.JComboBox combo1;
    public javax.swing.JComboBox combo2;
    public javax.swing.JLabel haslo_label;
    public javax.swing.JTextField haslo_pole;
    public javax.swing.JButton jButton1;
    public javax.swing.JCheckBox jCheckBox1;
    public javax.swing.JComboBox jComboBox3;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JTextField jTextField1;
    public javax.swing.JTextField jTextField2;
    public javax.swing.JTextField jTextField3;
    public javax.swing.JLabel label_combo1;
    public javax.swing.JLabel label_combo2;
    public javax.swing.JLabel opcja;
    public javax.swing.JLabel tytul;
    // End of variables declaration//GEN-END:variables
}
